const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, '..', 'database', 'alerts.db');

console.log('Ê£ÄÊü• 2025Âπ¥10Êúà14Êó• ÁöÑBTCÈó™Â¥©‰∫ã‰ª∂...\n');

const db = new sqlite3.Database(dbPath);

// Êü•ËØ¢10Êúà14Êó•ÁöÑcritical‰∫ã‰ª∂
db.all(`
  SELECT 
    id,
    symbol,
    datetime(timestamp) as time,
    severity,
    message,
    details
  FROM alerts
  WHERE severity = 'critical'
    AND date(timestamp) = '2025-10-14'
  ORDER BY timestamp
`, (err, rows) => {
  if (err) {
    console.error('‚ùå Êü•ËØ¢Â§±Ë¥•:', err);
    db.close();
    process.exit(1);
  }

  if (rows.length === 0) {
    console.log('‚ùå Ê≤°ÊúâÊâæÂà∞10Êúà14Êó•ÁöÑcritical‰∫ã‰ª∂');
  } else {
    console.log(`‚úÖ ÊâæÂà∞ ${rows.length} Êù°critical‰∫ã‰ª∂Ôºö\n`);
    rows.forEach(row => {
      console.log(`[${row.time}] ${row.symbol}`);
      console.log(`‰∏•ÈáçÁ∫ßÂà´: ${row.severity}`);
      console.log(`Ê∂àÊÅØ: ${row.message}`);
      if (row.details) {
        console.log(`ËØ¶ÊÉÖ: ${row.details}`);
      }
      console.log('---');
    });
  }

  // ÊòæÁ§∫ÊâÄÊúâcritical‰∫ã‰ª∂ÁöÑÊó•ÊúüÂàÜÂ∏É
  console.log('\nüìä ÊâÄÊúâcritical‰∫ã‰ª∂ÁöÑÊó•ÊúüÂàÜÂ∏ÉÔºö');
  db.all(`
    SELECT 
      DATE(timestamp) as event_date,
      COUNT(*) as count,
      GROUP_CONCAT(symbol, ', ') as symbols
    FROM alerts
    WHERE severity = 'critical'
    GROUP BY DATE(timestamp)
    ORDER BY event_date DESC
    LIMIT 10
  `, (err, dateRows) => {
    if (!err && dateRows.length > 0) {
      dateRows.forEach(row => {
        console.log(`${row.event_date}: ${row.count} Êù° (${row.symbols})`);
      });
    }
    db.close();
  });
});









