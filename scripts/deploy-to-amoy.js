/**
 * ÈÉ®ÁΩ≤Âà∞Polygon AmoyÊµãËØïÁΩëÔºàÊñ∞ÊµãËØïÁΩëÔºåÊõø‰ª£MumbaiÔºâ
 */
const hre = require("hardhat");
const fs = require('fs');
const path = require('path');

// AmoyÊµãËØïÁΩë‰∏äÁöÑUMA Optimistic Oracle V3Âú∞ÂùÄ
// Ê≥®ÊÑèÔºöÂ¶ÇÊûúUMAËøòÊú™ÈÉ®ÁΩ≤Âà∞AmoyÔºåÂèØËÉΩÈúÄË¶Å‰ΩøÁî®Mock Oracle
const UMA_ORACLE_AMOY = "0x263351499f82C107e540B01F0Ca959843e22464a"; // ÂæÖÁ°ÆËÆ§

async function main() {
  console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤Âà∞Polygon AmoyÊµãËØïÁΩë\n");
  console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  
  const [deployer] = await hre.ethers.getSigners();
  console.log("üë§ ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
  
  const balance = await deployer.getBalance();
  const balanceInPOL = hre.ethers.utils.formatEther(balance);
  console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", balanceInPOL, "POL\n");
  
  if (balance.lt(hre.ethers.utils.parseEther("0.1"))) {
    console.log("‚ö†Ô∏è  ‰ΩôÈ¢ù‰∏çË∂≥ÔºÅÂª∫ËÆÆËá≥Â∞ëÊúâ0.5 POL");
    console.log("üìù ËØ∑ËÆøÈóÆÊ∞¥ÈæôÂ§¥Ëé∑ÂèñÊµãËØïÂ∏ÅÔºö");
    console.log("   https://faucet.polygon.technology/\n");
    return;
  }
  
  console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  
  // ÈÉ®ÁΩ≤ConditionalTokens
  console.log("üìù Ê≠•È™§1ÔºöÈÉ®ÁΩ≤ConditionalTokensÂêàÁ∫¶...\n");
  const CTF = await hre.ethers.getContractFactory("ConditionalTokens");
  console.log("   Ê≠£Âú®ÈÉ®ÁΩ≤...");
  const ctf = await CTF.deploy();
  await ctf.deployed();
  
  console.log("   ‚úÖ ConditionalTokensÂ∑≤ÈÉ®ÁΩ≤");
  console.log("   üìç Âú∞ÂùÄ:", ctf.address);
  console.log("   üîó Êü•Áúã:", `https://amoy.polygonscan.com/address/${ctf.address}\n`);
  
  console.log("   ‚è≥ Á≠âÂæÖÂå∫ÂùóÁ°ÆËÆ§...");
  await ctf.deployTransaction.wait(3);
  console.log("   ‚úÖ Â∑≤Á°ÆËÆ§\n");
  
  console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  
  // ÈÉ®ÁΩ≤UmaCTFAdapter
  console.log("üìù Ê≠•È™§2ÔºöÈÉ®ÁΩ≤UmaCTFAdapterÂêàÁ∫¶...\n");
  console.log("   ‰ΩøÁî®UMA Oracle:", UMA_ORACLE_AMOY);
  
  const Adapter = await hre.ethers.getContractFactory("UmaCTFAdapter");
  console.log("   Ê≠£Âú®ÈÉ®ÁΩ≤...");
  const adapter = await Adapter.deploy(ctf.address, UMA_ORACLE_AMOY);
  await adapter.deployed();
  
  console.log("   ‚úÖ UmaCTFAdapterÂ∑≤ÈÉ®ÁΩ≤");
  console.log("   üìç Âú∞ÂùÄ:", adapter.address);
  console.log("   üîó Êü•Áúã:", `https://amoy.polygonscan.com/address/${adapter.address}\n`);
  
  console.log("   ‚è≥ Á≠âÂæÖÂå∫ÂùóÁ°ÆËÆ§...");
  await adapter.deployTransaction.wait(3);
  console.log("   ‚úÖ Â∑≤Á°ÆËÆ§\n");
  
  console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  
  // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ
  console.log("üìù Ê≠•È™§3Ôºö‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ...\n");
  
  const deployment = {
    network: "amoy",
    chainId: 80002,
    deployer: deployer.address,
    contracts: {
      conditionalTokens: {
        address: ctf.address,
        deployTx: ctf.deployTransaction.hash,
        blockNumber: ctf.deployTransaction.blockNumber
      },
      umaCTFAdapter: {
        address: adapter.address,
        deployTx: adapter.deployTransaction.hash,
        blockNumber: adapter.deployTransaction.blockNumber
      },
      umaOracle: UMA_ORACLE_AMOY
    },
    timestamp: new Date().toISOString(),
    balance: balanceInPOL + " POL"
  };
  
  const deploymentsDir = path.join(__dirname, '..', 'deployments');
  if (!fs.existsSync(deploymentsDir)) {
    fs.mkdirSync(deploymentsDir, { recursive: true });
  }
  
  const deploymentPath = path.join(deploymentsDir, 'amoy.json');
  fs.writeFileSync(deploymentPath, JSON.stringify(deployment, null, 2));
  
  console.log("   ‚úÖ ÈÉ®ÁΩ≤‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞:", deploymentPath);
  console.log("\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  
  console.log("üéâ ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ\n");
  console.log("üìã ÈÉ®ÁΩ≤ÊëòË¶Å:\n");
  console.log(JSON.stringify(deployment, null, 2));
  
  console.log("\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  console.log("üéØ ‰∏ã‰∏ÄÊ≠•Êìç‰Ωú:\n");
  console.log("1. Âú®ÊµèËßàÂô®Êü•Áúã:");
  console.log(`   CTF: https://amoy.polygonscan.com/address/${ctf.address}`);
  console.log(`   Adapter: https://amoy.polygonscan.com/address/${adapter.address}\n`);
  
  console.log("2. ÂàõÂª∫ÊµãËØïÂ∏ÇÂú∫:");
  console.log(`   npx hardhat run scripts/create-test-market.js --network amoy\n`);
  
  console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n");
  console.log("‚úÖ ÈÉ®ÁΩ≤ÊàêÂäüÂÆåÊàêÔºÅ");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("\n‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error.message);
    console.error(error);
    process.exit(1);
  });










